name: Deployment Workflow

on:
  push:
    branches:
      - development

jobs:
  # Job untuk menjalankan pengujian
  test:
    runs-on: ubuntu-latest
    steps:
      # Checkout kode dari branch
      - name: Checkout the code
        uses: actions/checkout@v2

      # Setup Go environment
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.21'

      # Menjalankan tes unit
      - name: Run Tests
        run: go test -v ./...

  # Job untuk build dan push Docker image
  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      # Checkout kode dari branch
      - name: Checkout the code
        uses: actions/checkout@v2

      # Membuat file .env dari secret
      - name: Create .env file
        run: echo "${{ secrets.ENV }}" > .env

      # Login ke Docker Hub
      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Build Docker image
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USER }}/capstone_project:latest .

      # Push Docker image ke Docker Hub
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USER }}/capstone_project:latest

  # Job untuk deployment ke EC2
  deploy-to-ec2:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    env:
      IMAGE_URI: '${{ secrets.DOCKER_USER }}/capstone_project:latest'
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}

    steps:
      # Checkout kode dari branch
      - name: Checkout the Code
        uses: actions/checkout@v2

      # Membuat file PEM dari secret
      - name: Create PEM File
        run: |
          echo "${{ secrets.EC2_PEM }}" > ec2-key.pem
          chmod 600 ec2-key.pem

      # Deploy ke EC2
      - name: Deploy to EC2
        run: |
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << EOF
          # Membuat direktori untuk volume jika belum ada
          sudo mkdir -p /var/uploads
          sudo chmod -R 777 /var/uploads

          # Stop dan hapus container yang sedang berjalan
          CONTAINER_ID=\$(sudo docker ps -aq --filter "name=capstone_project")
          if [ -n "\$CONTAINER_ID" ]; then
            echo "Stopping and removing existing container..."
            sudo docker stop \$CONTAINER_ID
            sudo docker rm \$CONTAINER_ID
          fi

          # Membersihkan dangling images
          echo "Removing dangling images..."
          sudo docker images -f "dangling=true" -q | xargs -r sudo docker rmi

          # Pull Docker image terbaru dari Docker Hub
          echo "Pulling latest image..."
          sudo docker pull $IMAGE_URI

          # Menjalankan container dengan volume
          echo "Starting new container..."
          sudo docker run -d --name capstone_project -p 8000:8000 -v /var/uploads:/app/uploads $IMAGE_URI
          EOF

      # Membersihkan file PEM
      - name: Clean up PEM File
        run: rm -f ec2-key.pem
